1. Unimodal Sequence: 

unimodel_sequence = input().split(" ")
unimodel_sequence = [int(i) for i in unimodel_sequence]

def getTopIndex_UnimodelSequence(unimodel_sequence):
    us = unimodel_sequence

    len1,len2 = len(us)-2,len(us)-1
    
    if us[len2] >= us[len1]:
        return len2
    
    zeroth,first = us[0],us[1]

    if (len(us) == int(1)) or (first < zeroth) :
        return int(0)

    low,high = 0,len(us)-1
    while high > low:
        Avg = (low + high) // 2
        middle = Avg
    
        if us[middle] == us[middle+1] or us[middle] < us[middle+1]:
            low = middle + 1
            
        else:
            high = middle
    else:        
        return low
print(getTopIndex_UnimodelSequence(unimodel_sequence))

2.Find the missing number:

import ast
powerTwoList = input()
powerTwoList = ast.literal_eval(powerTwoList)
size = int(input())
import math

def findMissingNumber(powerTwoList, size):
    a = math.pow(2,size)
    aa = (a) - 1
    summing = sum(powerTwoList)
    ans = a - summing
    return(int(ans-1))

            
    
print(findMissingNumber(powerTwoList, size))

3. Hybrid sort/ Binary Insertion Sort:

import ast
lst = input()
lst = ast.literal_eval(lst)
def BinaryInsertionSort(lst):
    length = len(lst)
    
    for ions in range(1, length):
        
        kilo,jam = lst[ions], ions-1
        
        while (jam > 0 or jam == 0) and kilo < lst[jam]:
            lst[jam+1],jam = lst[jam],jam-1
        else:    
            lst[jam+1] = kilo
    else:    
        return lst

    
print(BinaryInsertionSort(lst))

4. Pair of elements having smallest absolute difference:

import ast
lst = input()
lst = ast.literal_eval(lst)
def smallest_absdiff_pairs(lst):
    lst = sorted(lst)
    listie = list()

    def kk(lst):
        d,jj = float("inf"),len(lst)
        for i in range(jj-1):
            aa,bb = lst[i+1],lst[i]
            if aa - bb < d:
                d = aa - bb
                ans1 = d
        return ans1
    
    m,jj = kk(lst),len(lst) 
    for i in range(jj-1):
        aa,bb = lst[i+1],lst[i]
        if aa - bb == m:
            listie.append((bb,aa))
            ans2 = listie
    return ans2

    

print(smallest_absdiff_pairs(lst))
